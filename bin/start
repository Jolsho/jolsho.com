#!/bin/bash

set -e
DOMAIN="jolsho.com"

# GENERATE SOME CERTS
ASSETS_DIR="./assets"
CRT_FILE="$ASSETS_DIR/server.crt"
KEY_FILE="$ASSETS_DIR/server.key"

mkdir -p "$ASSETS_DIR"

# Function to copy certs from /etc/letsencrypt to ./assets
copy_certs() {
    sudo cp "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" "$CRT_FILE"
    sudo cp "/etc/letsencrypt/live/$DOMAIN/privkey.pem" "$KEY_FILE"
    sudo chown $(whoami):$(whoami) "$CRT_FILE" "$KEY_FILE"
}

# GENERATE SOME CERTS
if [ $# -eq 1 ] && [ "$1" = "production" ]; then
    # Check if certs already exist in /etc/letsencrypt
    if [ ! -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
        echo "Generating new production certificates for $DOMAIN..."
        docker pull certbot/certbot
        docker run -it --rm \
          -v "/etc/letsencrypt:/etc/letsencrypt" \
          -v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
          certbot/certbot certonly --standalone \
          -d "$DOMAIN" \
          --non-interactive --agree-tos \
          --email joshua.olson1@yahoo.com
    else
        echo "Certificates already exist in /etc/letsencrypt. Skipping generation."
    fi

    # Copy certs to ./assets regardless
    copy_certs

else
    if [ ! -f "$CRT_FILE" ]; then
        # Local development self-signed certs
        echo "Generating local cert and key"
        openssl req -x509 -newkey rsa:2048 \
            -keyout "$KEY_FILE" \
            -out "$CRT_FILE" \
            -sha256 -days 365 -nodes \
            -subj "/CN=localhost"
    fi
fi

# Install Docker & Compose if missing
if ! command -v docker &> /dev/null; then
  echo "Installing Docker..."
  sudo apt-get install -y docker.io docker-compose-plugin certbot
  sudo systemctl enable docker
  sudo systemctl start docker
fi

echo "Building and starting containers..."
docker compose build
docker compose up -d
echo "Setup complete. Go HTTPS server on 443, Nginx HLS internal on 8080."

